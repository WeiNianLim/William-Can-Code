{"version":3,"sources":["Home.jsx","About.jsx","Projects.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","state","value","open","backgroundColor","backgroundShadow","copied","handleClose","_this","setState","handleChange","event","handleDrawerOpen","handleDrawerClose","handleScroll","window","pageYOffset","addEventListener","this","removeEventListener","_this2","_this$props","props","classes","width","_this$state","url","location","href","console","log","react_default","a","createElement","AppBar_default","className","appBar","style","boxShadow","isWidthUp","Grid_default","container","direction","justify","alignItems","item","Avatar_default","alt","src","margin","imgProps","root","imgAva","Button_default","navButton","target","resume","Toolbar_default","IconButton_default","onClick","Menu_default","align","Typography_default","variant","Drawer_default","onClose","List_default","ListItem_default","app","mainRaised","Paper_default","elevation","mainContent","bigAvatar","imgAvatar","gutterBottom","marginTop","color","fontWeight","fontFamily","textTransform","class","marginRight","lib","text","onCopy","marginLeft","maxWidth","textAlign","Divider_default","spacing","xs","sm","md","experiencesImg","experiencesPlace","experiencesPosition","experiencesDescription","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent_default","snackBar","aria-describedby","message","CheckCircle_default","action","key","aria-label","Close_default","icon","height","Component","withWidth","withStyles","theme","_mainContent","_experiencesImg","appLocal","position","background","backgroundPosition","backgroundSize","right","left","&:hover","introDivider","divider","Object","defineProperty","zIndex","breakpoints","down","paddingRight","paddingLeft","marginBottom","BNA","borderRadius","&:focus","&:active","BNASelected","BNAWrapper","textDecoration","green","display","About","Projects","App","Switch","Route","path","concat","process","exact","render","reactProps","src_Home","src_About","src_Projects","Boolean","hostname","match","ReactDOM","BrowserRouter","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.319687a3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport classNames from \"classnames\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst styles = theme => ({\n  appLocal: {\n    position: \"relative\",\n    width: \"100%\",\n    margin: \"auto\",\n    background: 'url(\"/images/vancouver.jpg\")',\n    backgroundPosition: \"50%\",\n    backgroundSize: \"cover\",\n    height: 380\n  },\n  app: {\n    position: \"relative\",\n    width: \"100%\",\n    margin: \"auto\",\n    background:\n      'url(\"https://weinianlim.github.io/William-Can-Code/images/vancouver.jpg\")',\n    backgroundPosition: \"50%\",\n    backgroundSize: \"cover\",\n    height: 380\n  },\n  appBar: {\n    position: \"fixed\",\n    width: \"100%\",\n    right: 0,\n    left: 0\n  },\n  navButton: {\n    color: \"#ccd0d5\",\n    \"&:hover\": {\n      color: \"#377dff\",\n      backgroundColor: \"transparent\"\n    }\n  },\n  introDivider: {\n    height: 5,\n    width: 60,\n    // backgroundColor: \"#eaf2ff\"377dff,\n    backgroundColor: \"#377dff\",\n    margin: \"30px 0\"\n  },\n  divider: {\n    margin: \"15px 0\"\n  },\n  mainRaised: {\n    position: \"relative\",\n    zIndex: \"3\",\n    margin: \"-60px 30px 0px 30px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"-60px 15px 0px 15px\"\n    }\n  },\n  mainContent: {\n    paddingRight: 15,\n    paddingLeft: 15,\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    maxWidth: 1200,\n    [theme.breakpoints.down(\"md\")]: {\n      maxWidth: 890\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 720\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      maxWidth: 540\n    }\n  },\n  bigAvatar: {\n    marginTop: -80,\n    marginBottom: 5,\n    width: 160,\n    height: 160\n  },\n  imgAvatar: {\n    boxShadow: \"rgba(0,0,0,.14), rgba(0,0,0,.12), rgba(0,0,0,.2)\"\n  },\n  BNA: {\n    marginLeft: 5,\n    marginRight: 5,\n    color: \"#555555\",\n    borderRadius: \"2px\",\n    width: 110,\n    height: 110,\n    \"&:hover\": {\n      backgroundColor: \"#EEECEE\"\n    },\n    \"&:focus\": {\n      //   backgroundColor: \"purple\",\n      boxShadow:\n        \"0 5px 20px 0 rgba(0,0,0,.2), 0 13px 24px -11px rgba(156,39,176,.6)\",\n      color: \"white\"\n    },\n    \"&:active\": {\n      color: \"white\",\n      //   backgroundColor: \"purple\",\n      boxShadow:\n        \"0 5px 20px 0 rgba(0,0,0,.2), 0 13px 24px -11px rgba(156,39,176,.6)\"\n    }\n  },\n  BNASelected: {\n    backgroundColor: \"purple\",\n    // boxShadow:\n    //   \"0 5px 20px 0 rgba(0,0,0,.2), 0 13px 24px -11px rgba(156,39,176,.6)\",\n    color: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"purple\",\n      boxShadow:\n        \"0 5px 20px  0 rgba(0,0,0,.2), 0 13px 24px -11px rgba(156,39,176,.6)\",\n      color: \"white\"\n    },\n    \"&:focus\": {\n      backgroundColor: \"purple\",\n      boxShadow:\n        \"0 5px 20px  0 rgba(0,0,0,.2), 0 13px 24px -11px rgba(156,39,176,.6)\",\n      color: \"white\"\n    }\n    // \"&:active\": {\n    //   backgroundColor: \"purple\",\n    //   boxShadow:\n    //     \"0 5px 20px  0 rgba(0,0,0,.2), 0 13px 24px -11px rgba(156,39,176,.6)\",\n    //   color: \"white\"\n    // }\n  },\n  // BNALabel: {\n  //   color: \"#555555\",\n  //   \"&:focus\": {\n  //     color: \"white\"\n  //   }\n  // },\n  BNAWrapper: {\n    color: \"white\"\n  },\n  experiencesPlace: {\n    fontFamily: \"Roboto Slab\",\n    fontWeight: \"600\",\n    color: \"#3c4858\"\n  },\n  experiencesPosition: {\n    fontFamily: \"Roboto Slab\",\n    fontWeight: \"600\",\n    color: \"#8B9299\",\n    textTransform: \"uppercase\"\n  },\n  experiencesDescription: {\n    fontFamily: \"Roboto Slab\",\n    fontWeight: \"600\",\n    color: \"#B5B5B5\"\n  },\n  experiencesImg: {\n    width: \"100%\",\n    height: \"auto\",\n    borderRadius: 10,\n    boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.12),0 2px 4px 0 rgba(0,0,0,0.08)\",\n    [theme.breakpoints.down(\"md\")]: {\n      // width: \"auto\",\n      // height: 200,\n    },\n    [theme.breakpoints.down(\"sm\")]: {},\n    [theme.breakpoints.down(\"xs\")]: {}\n  },\n  resume: {\n    textDecoration: \"none\",\n    color: \"white\",\n    \"&:hover\": {\n      fontWeight: \"600\"\n    }\n  },\n  snackBar: {\n    backgroundColor: green[600],\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nclass Home extends Component {\n  state = {\n    value: \"experiences\",\n    open: false,\n    backgroundColor: \"transparent\",\n    backgroundShadow: \"none\",\n    copied: false\n  };\n\n  handleClose = () => {\n    this.setState({ copied: false });\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  handleScroll = event => {\n    if (window.pageYOffset > 200) {\n      this.setState({\n        backgroundShadow:\n          \"0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 12px -5px rgba(33, 150, 243, 0.46)\",\n        backgroundColor: \"#2196F3\"\n      });\n    } else {\n      this.setState({\n        backgroundColor: \"transparent\",\n        backgroundShadow: \"none\"\n      });\n    }\n  };\n\n  render() {\n    const { classes, width } = this.props;\n    const { value, copied } = this.state;\n    const url = window.location.href;\n    console.log(this.state);\n    return (\n      <div>\n        <AppBar\n          className={classes.appBar}\n          style={{\n            backgroundColor: this.state.backgroundColor,\n            boxShadow: this.state.backgroundShadow\n          }}\n        >\n          {isWidthUp(\"sm\", width) ? (\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                >\n                  <Grid item>\n                    <Avatar\n                      alt=\"Will Header\"\n                      src={\n                        url == \"http://localhost:3000/\"\n                          ? \"/images/profile.jpg\"\n                          : \"https://weinianlim.github.io/William-Can-Code/images/profile.jpg\"\n                      }\n                      style={{ margin: \"10px\" }}\n                      imgProps={{ root: classes.imgAva }}\n                    />\n                  </Grid>\n                  <Grid item />\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  {/* <Grid item>\n                    <Button className={classes.navButton}>Projects</Button>\n                  </Grid>\n                  <Grid item>\n                    <Button className={classes.navButton}>About</Button>\n                  </Grid>\n                  <Grid item>\n                    <Button className={classes.navButton}>Contact Me</Button>\n                  </Grid> */}\n                  <Grid item>\n                    <Button className={classes.navButton}>\n                      <a\n                        href={\n                          url == \"http://localhost:3000/\"\n                            ? \"/images/resume.pdf\"\n                            : \"https://weinianlim.github.io/William-Can-Code/images/resume.pdf\"\n                        }\n                        target=\"_blank\"\n                        className={classes.resume}\n                      >\n                        Resume\n                      </a>\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : (\n            <Toolbar>\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  <Grid item>\n                    <IconButton onClick={this.handleDrawerOpen}>\n                      <MenuIcon />\n                    </IconButton>\n                  </Grid>\n                  <Grid item align=\"center\">\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"space-between\"\n                      alignItems=\"center\"\n                    >\n                      <Grid item>\n                        <Avatar\n                          alt=\"Will Header\"\n                          src={\n                            url == \"http://localhost:3000/\"\n                              ? \"/images/profile.jpg\"\n                              : \"https://weinianlim.github.io/William-Can-Code/images/profile.jpg\"\n                          }\n                          style={{ margin: \"10px\" }}\n                        />\n                      </Grid>\n                      <Grid item />\n                      <Typography variant=\"h4\">I'm Will</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          )}\n        </AppBar>\n        <Drawer open={this.state.open} onClose={this.handleDrawerClose}>\n          <List>\n            <ListItem>Projects</ListItem>\n            <ListItem>About</ListItem>\n            <ListItem>Contact Me</ListItem>\n          </List>\n        </Drawer>\n        <div className={classes.app} />\n        <div className={classes.mainRaised}>\n          <Paper elevation={24} style={{ margin: \"auto\" }}>\n            <div className={classes.mainContent}>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <Avatar\n                    src={\n                      url == \"http://localhost:3000/\"\n                        ? \"/images/profile.jpg\"\n                        : \"https://weinianlim.github.io/William-Can-Code/images/profile.jpg\"\n                    }\n                    className={classes.bigAvatar}\n                    imgProps={{ root: classes.imgAvatar }}\n                  />\n                </Grid>\n                <Grid item>\n                  <Typography\n                    variant=\"h4\"\n                    gutterBottom\n                    style={{\n                      marginTop: \"20px\",\n                      color: \"#3c4858\",\n                      fontWeight: \"700\",\n                      fontFamily: \"Roboto Slab\"\n                    }}\n                  >\n                    William Lim\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography\n                    variant=\"caption\"\n                    gutterBottom\n                    style={{\n                      textTransform: \"uppercase\",\n                      color: \"#6f757c\",\n                      fontWeight: \"700\",\n                      fontFamily: \"Roboto\"\n                    }}\n                  >\n                    Developer {\"&\"} Designer\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  style={{\n                    marginTop: \"30px\"\n                  }}\n                >\n                  <Button>\n                    <a\n                      href=\"https://www.linkedin.com/in/williamwnl/\"\n                      target=\"_blank\"\n                    >\n                      <i\n                        class=\"im im-linkedin\"\n                        style={{ color: \"#0077B5\", marginRight: \"20px\" }}\n                      />\n                    </a>\n                  </Button>\n                  <CopyToClipboard\n                    text=\"weinianlim26@gmail.com\"\n                    onCopy={() => this.setState({ copied: true })}\n                  >\n                    <Button>\n                      <i class=\"im im-mail\" style={{ color: \"#D54D40\" }} />\n                    </Button>\n                  </CopyToClipboard>\n                  <Button>\n                    <a href=\"https://github.com/WeiNianLim\" target=\"_blank\">\n                      <i\n                        class=\"im im-github\"\n                        style={{ color: \"#24292E\", marginLeft: \"20px\" }}\n                      />\n                    </a>\n                  </Button>\n                </Grid>\n              </Grid>\n              <Typography\n                variant=\"body1\"\n                gutterBottom\n                style={{\n                  maxWidth: \"500px\",\n                  textAlign: \"center\",\n                  margin: \"20px auto\"\n                }}\n              >\n                Ever since I developed my first android app, coding has been\n                part of my lifestyle as long as i can remember. The awesome\n                feeling of solving a coding challenge, the \"high\" of completing\n                a project and the satisfaction from seeing my work being used by\n                other people, these have become my daily source of dopamine.\n              </Typography>\n              <Divider variant=\"middle\" />\n              {/* <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{ height: \"200px\" }}\n              >\n                <BottomNavigation\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                  showLabels\n                >\n                  <BottomNavigationAction\n                    label=\"Experiences\"\n                    value=\"experiences\"\n                    icon={<WorkIcon />}\n                    classes={{\n                      root: classes.BNA,\n                      selected: classes.BNASelected,\n                      label: classes.BNALabel,\n                      wrapper: value === \"experiences\" ? classes.BNAWrapper : \"\"\n                    }}\n                  />\n                  <BottomNavigationAction\n                    label=\"Technology\"\n                    value=\"technology\"\n                    icon={<i class=\"im im-layer\" />}\n                    classes={{\n                      root: classes.BNA,\n                      selected: classes.BNASelected,\n                      label: classes.BNALabel,\n                      wrapper: value === \"technology\" ? classes.BNAWrapper : \"\"\n                    }}\n                  />\n                  <BottomNavigationAction\n                    label=\"Projects\"\n                    value=\"projects\"\n                    icon={<BuildIcon />}\n                    classes={{\n                      root: classes.BNA,\n                      selected: classes.BNASelected,\n                      label: classes.BNALabel,\n                      wrapper: value === \"projects\" ? classes.BNAWrapper : \"\"\n                    }}\n                  />\n                </BottomNavigation>\n              </Grid> */}\n              {/* <Switch>\n                <Route\n                  path={match.url + \"/experiences\"}\n                  component={Experiences}\n                />\n                <Route\n                  path={match.url + \"/technology\"}\n                  component={Technology}\n                />\n                <Route path={match.url + \"/projects\"} component={Projects} />\n              </Switch> */}\n              {value === \"experiences\" && (\n                <div>\n                  <Typography\n                    variant=\"h3\"\n                    gutterBottom\n                    style={{\n                      maxWidth: \"600px\",\n                      textAlign: \"center\",\n                      margin: \"10px auto\",\n                      color: \"#3c4858\",\n                      fontFamily: \"Roboto Slab\",\n                      fontWeight: \"700\"\n                    }}\n                  >\n                    Awesome Experiences\n                  </Typography>\n                  <Grid container spacing={24} style={{ marginTop: \"35px\" }}>\n                    <Grid item xs={12} sm={5} md={2}>\n                      <img\n                        src={\n                          url == \"http://localhost:3000/\"\n                            ? \"/images/portonlogo.png\"\n                            : \"https://weinianlim.github.io/William-Can-Code/images/portonlogo.png\"\n                        }\n                        className={classes.experiencesImg}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={7} md={4}>\n                      <Typography\n                        variant=\"h5\"\n                        gutterBottom\n                        className={classes.experiencesPlace}\n                      >\n                        Porton Health\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        gutterBottom\n                        className={classes.experiencesPosition}\n                      >\n                        Junior Full Stack Developer\n                      </Typography>\n                      <Typography\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        className={classes.experiencesDescription}\n                      >\n                        Working at Porton Health since 2018, October has been\n                        awesome. Besides able to work with my favourite\n                        javscript library, React, I get to learn how to design,\n                        build and test in Meteor. My team and I are working hard\n                        everyday to deliver the best version of porton health\n                        Web Application.\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={5} md={2}>\n                      <img\n                        src={\n                          url == \"http://localhost:3000/\"\n                            ? \"/images/clarius.png\"\n                            : \"https://weinianlim.github.io/William-Can-Code/images/clarius.png\"\n                        }\n                        className={classes.experiencesImg}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={7} md={4}>\n                      <Typography\n                        variant=\"h5\"\n                        gutterBottom\n                        className={classes.experiencesPlace}\n                      >\n                        Clarius Mobile Health\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        gutterBottom\n                        className={classes.experiencesPosition}\n                      >\n                        Software Engineer\n                      </Typography>\n                      <Typography\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        className={classes.experiencesDescription}\n                      >\n                        Clarius was my stepping stone towards programming\n                        industry. My main focus there was to develop new\n                        software feature for their android version of Clarius\n                        Mobile Application. During my time there, I had the\n                        opportunity to learn new programming language and\n                        technology such as python, Qt and Jenkins\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={5} md={2}>\n                      <img\n                        src={\n                          url == \"http://localhost:3000/\"\n                            ? \"/images/brainstation.png\"\n                            : \"https://weinianlim.github.io/William-Can-Code/images/brainstation.png\"\n                        }\n                        className={classes.experiencesImg}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={7} md={4}>\n                      <Typography\n                        variant=\"h5\"\n                        gutterBottom\n                        className={classes.experiencesPlace}\n                      >\n                        Brainstation\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        gutterBottom\n                        className={classes.experiencesPosition}\n                      >\n                        Full Time Web Development Student\n                      </Typography>\n                      <Typography\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        className={classes.experiencesDescription}\n                      >\n                        Brainstation was nothing but endless of fun. I took at\n                        10 week full time web development program and I got to\n                        say, it was intense! In the end of the program, I was\n                        able to build MERN stack Web Application from scratch,\n                        comfortably.\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={5} md={2}>\n                      <img\n                        src={\n                          url == \"http://localhost:3000/\"\n                            ? \"/images/ubc.jpg\"\n                            : \"https://weinianlim.github.io/William-Can-Code/images/ubc.jpg\"\n                        }\n                        className={classes.experiencesImg}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={7} md={4}>\n                      <Typography\n                        variant=\"h5\"\n                        gutterBottom\n                        className={classes.experiencesPlace}\n                      >\n                        University of British Columbia\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        gutterBottom\n                        className={classes.experiencesPosition}\n                      >\n                        B.A.Sc in Electrical Engineering\n                      </Typography>\n                      <Typography\n                        variant=\"subtitle1\"\n                        gutterBottom\n                        className={classes.experiencesDescription}\n                      >\n                        My four years in UBC was a phenomenal period of time.\n                        The were ups and downs and it was a really truly\n                        challenging and hard for me. I am glad that I did not\n                        quit as UBC showed me what I love and capable of doing,\n                        gifted me passion of continuous learning and trained me\n                        to not give up.\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </div>\n              )}\n              <Snackbar\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n                open={copied}\n                onClose={this.handleClose}\n                autoHideDuration={6000}\n              >\n                <SnackbarContent\n                  className={classes.snackBar}\n                  aria-describedby=\"client-snackbar\"\n                  message={\n                    <span className={classes.message}><CheckCircleIcon style={{marginRight: \"3px\"}}/>Email Address Copied to Clipboard</span>\n                  }\n                  action={[\n                    <IconButton\n                      key=\"close\"\n                      aria-label=\"Close\"\n                      color=\"inherit\"\n                      onClick={this.handleClose}\n                    >\n                      <CloseIcon className={classes.icon} />\n                    </IconButton>,\n                  ]}\n                />\n              </Snackbar>\n              {/* {value === \"technology\" && (\n                <div>\n                  <Typography\n                    variant=\"h3\"\n                    gutterBottom\n                    style={{\n                      maxWidth: \"600px\",\n                      textAlign: \"center\",\n                      margin: \"10px auto\",\n                      color: \"#3c4858\",\n                      fontFamily: \"Roboto Slab\",\n                      fontWeight: \"700\"\n                    }}\n                  >\n                    I've used\n                  </Typography>\n                  <Grid container spacing={24} />\n                </div>\n              )} */}\n            </div>\n          </Paper>\n\n          <div style={{ height: \"100px\" }} />\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withWidth()(withStyles(styles)(Home));\n\n// {isWidthUp(\"md\", width) ? (\n//   <Grid\n//\n//     direction=\"row\"\n//     justify=\"space-between\"\n//     alignItems=\"center\"\n//   >\n//     <Grid item>\n//       <Typography\n//         variant=\"h1\"\n//         style={{\n//           color: \"#377dff\",\n//           fontFamily: \"Roboto\",\n//           fontWeight: \"500\"\n//         }}\n//       >\n//         Hi, I'm Will\n//       </Typography>\n//       <Typography\n//         variant=\"subtitle1\"\n//         gutterBottom\n//         style={{ color: \"#798490\", fontFamily: \"Roboto Slab\" }}\n//       >\n//         Designer {\"&\"} Developer\n//       </Typography>\n//       <Divider variant=\"fullWidth\" className={classes.introDivider} />\n//       <Typography\n//         variant=\"h6\"\n//         gutterBottom\n//         style={{ fontFamily: \"Roboto\" }}\n//       >\n//         Full Stack Developer at Porton Health\n//       </Typography>\n//     </Grid>\n//     <Grid item align=\"center\">\n//       <img\n//         style={{\n//           borderRadius: \"10px\",\n//           height: \"250px\",\n//           width: \"250px\"\n//         }}\n//         src={\n//           url == \"http://localhost:3000/\"\n//             ? \"/images/profile.jpg\"\n//             : \"https://weinianlim.github.io/William-Can-Code/images/profile.jpg\"\n//         }\n//       />\n//     </Grid>\n//   </Grid>\n// ) : (\n//   <Grid\n//     container\n//     direction=\"column\"\n//     justify=\"space-around\"\n//     alignItems=\"center\"\n//   >\n//     <Grid item>\n//       <img\n//         style={{\n//           borderRadius: \"50%\",\n//           height: \"150px\",\n//           width: \"150px\"\n//         }}\n//         alt=\"Avatar\"\n//         src={\n//           url == \"http://localhost:3000/\"\n//             ? \"/images/profile.jpg\"\n//             : \"https://weinianlim.github.io/William-Can-Code/images/profile.jpg\"\n//         }\n//       />\n//     </Grid>\n//     <Grid item>\n//       <Typography\n//         variant=\"h4\"\n//         style={{\n//           color: \"#377dff\",\n//           fontFamily: \"Roboto Condensed\",\n//           fontWeight: \"500\"\n//         }}\n//       >\n//         Hi, I'm Will\n//       </Typography>\n//     </Grid>\n//     <Grid item>\n//       <Typography\n//         variant=\"subtitle1\"\n//         gutterBottom\n//         style={{ color: \"#798490\", fontFamily: \"Roboto Slab\" }}\n//       >\n//         Designer {\"&\"} Developer\n//       </Typography>\n//     </Grid>\n//     <Grid item>\n//       <Typography\n//         variant=\"h6\"\n//         gutterBottom\n//         style={{ fontFamily: \"Roboto\" }}\n//       >\n//         Full Stack Developer at Porton Health\n//       </Typography>\n//     </Grid>\n//   </Grid>\n// )}\n\n// <Divider variant=\"middle\" className={classes.divider} />\n// <Typography variant=\"h3\" gutterBottom>\n//   My Journey\n// </Typography>\n// <Grid container spacing={24}>\n//   <Grid item xs={12} sm={4}>\n//     <img\n//       style={{\n//         borderRadius: \"10px\",\n//         height: \"auto\",\n//         width: \"200px\"\n//       }}\n//       src={\n//         url == \"http://localhost:3000/\"\n//           ? \"/images/portonlogo.png\"\n//           : \"https://weinianlim.github.io/William-Can-Code/images/portonlogo.png\"\n//       }\n//     />\n//   </Grid>\n//   <Grid item xs={12} sm={7}>\n//     <Typography variant=\"h5\" gutterBottom>\n//       Porton Health\n//     </Typography>\n//   </Grid>\n\n//   <Grid item xs={12} sm={7}>\n//     <Typography variant=\"h5\" gutterBottom>\n//       Brainstation\n//     </Typography>\n//   </Grid>\n//   <Grid item xs={12} sm={4}>\n//     <img\n//       style={{\n//         borderRadius: \"10px\",\n//         height: \"300px\",\n//         width: \"auto\"\n//       }}\n//       src={\n//         url == \"http://localhost:3000/\"\n//           ? \"/images/brainstation.png\"\n//           : \"https://weinianlim.github.io/William-Can-Code/images/brainstation.png\"\n//       }\n//     />\n//   </Grid>\n\n//   <Grid item xs={12} sm={4}>\n//     <img\n//       style={{\n//         borderRadius: \"10px\",\n//         height: \"250px\",\n//         width: \"auto\"\n//       }}\n//       src={\n//         url == \"http://localhost:3000/\"\n//           ? \"/images/clarius.png\"\n//           : \"https://weinianlim.github.io/William-Can-Code/images/clarius.png\"\n//       }\n//     />\n//   </Grid>\n//   <Grid item xs={12} sm={8}>\n//     <Typography variant=\"h5\" gutterBottom>\n//       Clarius Mobile Health\n//     </Typography>\n//   </Grid>\n\n//   <Grid item xs={12} sm={8}>\n//     <Typography variant=\"h5\" gutterBottom>\n//       University of British Columbia\n//     </Typography>\n//   </Grid>\n//   <Grid item xs={12} sm={4}>\n//     <img\n//       style={{\n//         borderRadius: \"10px\",\n//         height: \"270px\",\n//         width: \"auto\"\n//       }}\n//       src={\n//         url == \"http://localhost:3000/\"\n//           ? \"/images/ubc.jpg\"\n//           : \"https://weinianlim.github.io/William-Can-Code/images/ubc.jpg\"\n//       }\n//     />\n//   </Grid>\n// </Grid>\n\n// <Divider variant=\"middle\" className={classes.divider} />\n","import React, { Component } from 'react';\n\nclass About extends Component{\n    render(){\n        return (\n            <div>About</div>\n        )\n    }\n}\n\nexport default About","import React, { Component } from 'react';\n\nclass Projects extends Component{\n    render(){\n        return (\n            <div>Projects</div>\n        )\n    }\n}\n\nexport default Projects","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from './Home.jsx'\nimport About from './About.jsx'\nimport Projects from './Projects.jsx'\n\nexport default class App extends Component {\n  render(){\n    return(\n      <Switch>\n        <Route path={`${process.env.PUBLIC_URL}/`} exact render={\n            reactProps => \n              <Home />\n        }/>\n        <Route path={`${process.env.PUBLIC_URL}/about`} render={\n            reactProps => \n              <About />\n        }/>\n        <Route path={`${process.env.PUBLIC_URL}/projects`} render={\n            reactProps => \n              <Projects />\n        }/>\n\n      </Switch>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}