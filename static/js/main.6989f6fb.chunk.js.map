{"version":3,"sources":["Home.jsx","About.jsx","Projects.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this$props","this","props","classes","width","url","window","location","href","react_default","a","createElement","className","app","AppBar_default","position","appBar","isWidthUp","Grid_default","container","direction","justify","alignItems","item","Avatar_default","alt","src","style","margin","Typography_default","variant","align","Button_default","Toolbar_default","IconButton_default","onClick","Menu_default","Drawer_default","onClose","List_default","ListItem_default","gutterBottom","height","Divider_default","Component","withWidth","withStyles","theme","maxWidth","paddingLeft","paddingRight","backgroundColor","boxShadow","About","Projects","App","Switch","Route","path","concat","process","exact","render","reactProps","src_Home","src_About","src_Projects","Boolean","hostname","match","ReactDOM","BrowserRouter","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6989f6fb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst styles = theme => ({\n  app: {\n    maxWidth: 1200,\n    margin: \"auto\",\n    paddingLeft: 50,\n    paddingRight: 50,\n    width: \"100%\"\n  },\n  appBar: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\"\n  }\n});\n\nclass Home extends Component {\n  state = {\n    open: false\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, width } = this.props;\n    const url = window.location.href;\n    return (\n      <div className={classes.app}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          {isWidthUp(\"sm\", width) ? (\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                >\n                  <Grid item>\n                    <Avatar\n                      alt=\"Will Header\"\n                      src={\n                        url == \"http://localhost:3000/\"\n                          ? \"/images/profile.jpg\"\n                          : \"https://weinianlim.github.io/William-Can-Code/images/profile.jpg\"\n                      }\n                      style={{ margin: \"10px\" }}\n                    />\n                  </Grid>\n                  <Grid item />\n                  <Typography variant=\"h4\">I'm Will</Typography>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  <Grid item align=\"center\">\n                    <Button>Projects</Button>\n                  </Grid>\n                  <Grid item align=\"center\">\n                    <Button>About</Button>\n                  </Grid>\n                  <Grid item align=\"center\">\n                    <Button>Contact Me</Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : (\n            <Toolbar>\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  <Grid item>\n                    <IconButton onClick={this.handleDrawerOpen}>\n                      <MenuIcon />\n                    </IconButton>\n                  </Grid>\n                  <Grid item align=\"center\">\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"space-between\"\n                      alignItems=\"center\"\n                    >\n                      <Grid item>\n                        <Avatar\n                          alt=\"Will Header\"\n                          src={\n                            url == \"http://localhost:3000/\"\n                              ? \"/images/profile.jpg\"\n                              : \"https://weinianlim.github.io/William-Can-Code/images/profile.jpg\"\n                          }\n                          style={{ margin: \"10px\" }}\n                        />\n                      </Grid>\n                      <Grid item />\n                      <Typography variant=\"h4\">I'm Will</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          )}\n        </AppBar>\n        <Drawer open={this.state.open} onClose={this.handleDrawerClose}>\n          <List>\n            <ListItem>Projects</ListItem>\n            <ListItem>About</ListItem>\n            <ListItem>Contact Me</ListItem>\n          </List>\n        </Drawer>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Typography variant=\"h3\" gutterBottom>\n              Hi, I'm Will. \n            </Typography>\n            <Typography variant=\"h3\" gutterBottom>\n              Designer {\"&\"} Developer\n            </Typography>\n          </Grid>\n          <Grid item align=\"center\">\n            <img\n              style={{ height: \"250px\", width: \"250px\" }}\n              src={\n                url == \"http://localhost:3000/\"\n                  ? \"/images/profile.jpg\"\n                  : \"https://weinianlim.github.io/William-Can-Code/images/profile.jpg\"\n              }\n            />\n          </Grid>\n        </Grid>\n        <Divider variant=\"middle\" />\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withWidth()(withStyles(styles)(Home));\n\n{\n  /* <Grid container spacing={24}>\n            <Grid item xs={1} align=\"center\">\n              <WhatshotIcon />\n            </Grid>\n            <Grid item xs />\n            <Grid item xs={1} align=\"center\">\n              <Button color=\"inherit\">Projects</Button>\n            </Grid>\n            <Grid item xs={1} align=\"center\">\n              <Button color=\"inherit\">About</Button>\n            </Grid>\n            <Grid item xs={1} align=\"center\">\n              <Button color=\"inherit\">Contact Me</Button>\n            </Grid>\n          </Grid> */\n}\n","import React, { Component } from 'react';\n\nclass About extends Component{\n    render(){\n        return (\n            <div>About</div>\n        )\n    }\n}\n\nexport default About","import React, { Component } from 'react';\n\nclass Projects extends Component{\n    render(){\n        return (\n            <div>Projects</div>\n        )\n    }\n}\n\nexport default Projects","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from './Home.jsx'\nimport About from './About.jsx'\nimport Projects from './Projects.jsx'\n\nexport default class App extends Component {\n  render(){\n    return(\n      <Switch>\n        <Route path={`${process.env.PUBLIC_URL}/`} exact render={\n            reactProps => \n              <Home />\n        }/>\n        <Route path={`${process.env.PUBLIC_URL}/about`} render={\n            reactProps => \n              <About />\n        }/>\n        <Route path={`${process.env.PUBLIC_URL}/projects`} render={\n            reactProps => \n              <Projects />\n        }/>\n\n      </Switch>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}